steps:
# --- Build ---

# Backend / Build Docker container
- name: 'gcr.io/cloud-builders/docker'
  id: 'build-backend'
  args: ['build', '-t', 
          'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA', './backend',
          '--target=prod']

# Backend / Push container to Google Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  id: 'push-backend'
  args: ['push', 'gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA']

# Frontend / Install dependencies
- name: node:16.10
  id: 'init-frontend'
  entrypoint: npm
  args: ['install']
  dir: 'frontend/'
  waitFor: ['-']

# Frontend / Build
- name: node:16.10
  id: 'build-frontend'
  entrypoint: npm
  args: ['run', 'build']
  env:
  - 'WORDBREW_API_URL=${_WORDBREW_API_URL}'
  dir: 'frontend/'

# --- Deploy ---

# Backend / Deploy to Cloud Run
- name: google/cloud-sdk
  id: 'deploy-backend'
  args: ['gcloud', 'run', 'deploy', 'wordbrew-api', 
          '--image=gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA',
          '--region', 'us-west2', '--platform', 'managed', 
          '--allow-unauthenticated', '--port', '8000']
  waitFor: ['push-backend', 'build-frontend']

# Frontend / Sync to storage bucket
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: gsutil
  args: ['-m', 'rsync', '-r', '-d', './frontend/build', 'gs://${_BUCKET_NAME}']
  waitFor: ['deploy-backend']

# Frontend / Set no cache on index.html
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: gsutil
  args: ['setmeta', '-h', 'Cache-Control:no-store', 'gs://${_BUCKET_NAME}/**.html']

substitutions:
    _WORDBREW_API_URL: https://wordbrew-api-q35ri6rwla-wl.a.run.app
    _BUCKET_NAME: wordbrew.io
